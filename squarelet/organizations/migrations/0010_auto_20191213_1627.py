# Generated by Django 2.1.7 on 2019-12-13 21:27

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion
import squarelet.organizations.models


class Migration(migrations.Migration):

    dependencies = [
        ('oidc_provider', '0026_client_multiple_response_types'),
        ('organizations', '0009_auto_20191119_1416'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entitlement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="The entitlement's name", max_length=255, verbose_name='name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, help_text='A unique slug to identify the plan', populate_from=squarelet.organizations.models.entitlement_slug, unique=True, verbose_name='slug')),
                ('description', models.TextField(help_text='A brief description of the service this grants access to', verbose_name='description')),
                ('client', models.ForeignKey(help_text='Client this entitlement grants access to', on_delete=django.db.models.deletion.CASCADE, to='oidc_provider.Client', verbose_name='client')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_id', models.CharField(blank=True, help_text='The subscription ID on stripe', max_length=255, null=True, unique=True, verbose_name='subscription id')),
                ('update_on', models.DateField(help_text='Date when monthly resources are restored', verbose_name='date update')),
                ('cancelled', models.BooleanField(default=False)),
            ],
        ),
        migrations.RemoveField(
            model_name='plan',
            name='feature_level',
        ),
        migrations.AddField(
            model_name='organization',
            name='plans',
            field=models.ManyToManyField(blank=True, help_text='Plans this organization is subscribed to', related_name='organizations', to='organizations.Plan', verbose_name='plans'),
        ),
        migrations.AddField(
            model_name='plan',
            name='pay_to',
            field=models.PositiveSmallIntegerField(choices=[(0, 'MuckRock'), (1, 'PressPass')], default=0, help_text="Which company's stripe account is used for subscrpitions to this plan", verbose_name='pay to'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='organization',
            name='next_plan',
            field=models.ForeignKey(blank=True, help_text='The pending plan to be updated to on the next billing cycle - used when downgrading a plan to let the organization finish out a subscription is paid for', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pending_organizations', to='organizations.Plan', verbose_name='next plan'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='plan',
            field=models.ForeignKey(blank=True, help_text='The current plan this organization is subscribed to', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='organizations.Plan', verbose_name='plan'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='organizations.Organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='organizations.Plan', verbose_name='plan'),
        ),
        migrations.AddField(
            model_name='plan',
            name='entitlements',
            field=models.ManyToManyField(blank=True, help_text='Entitlements granted by this plan', related_name='plans', to='organizations.Entitlement', verbose_name='entitlements'),
        ),
        migrations.AlterUniqueTogether(
            name='subscription',
            unique_together={('organization', 'plan')},
        ),
        migrations.AlterUniqueTogether(
            name='entitlement',
            unique_together={('name', 'client')},
        ),
    ]
