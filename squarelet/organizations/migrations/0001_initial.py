# Generated by Django 2.1.7 on 2019-03-21 15:16

import autoslug.fields
import django.contrib.postgres.fields.citext
from django.contrib.postgres.operations import CITextExtension
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sorl.thumbnail.fields
import squarelet.core.fields
import squarelet.core.mixins
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        CITextExtension(),
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(help_text='Amount in cents', verbose_name='amount')),
                ('fee_amount', models.PositiveSmallIntegerField(default=0, help_text='Fee percantage', verbose_name='fee amount')),
                ('created_at', models.DateTimeField(verbose_name='created at')),
                ('charge_id', models.CharField(max_length=255, unique=True, verbose_name='charge_id')),
                ('description', models.CharField(max_length=255, verbose_name='description')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='uuid')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('request', models.BooleanField(default=False, help_text='Is this a request for an invitation from the user or an invitation to the user from an admin?', verbose_name='request')),
                ('created_at', squarelet.core.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('accepted_at', models.DateTimeField(blank=True, null=True, verbose_name='accepted at')),
                ('rejected_at', models.DateTimeField(blank=True, null=True, verbose_name='rejected at')),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.BooleanField(default=False, help_text='This user has administrative rights for this organization', verbose_name='admin')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True, verbose_name='slug')),
                ('created_at', squarelet.core.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('updated_at', squarelet.core.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='updated at')),
                ('avatar', sorl.thumbnail.fields.ImageField(blank=True, upload_to='org_avatars', verbose_name='avatar')),
                ('individual', models.BooleanField(default=False, help_text='This organization is solely for the use of one user', verbose_name='individual organization')),
                ('private', models.BooleanField(default=False, verbose_name='private organization')),
                ('max_users', models.IntegerField(default=5, verbose_name='maximum users')),
                ('update_on', models.DateField(blank=True, help_text='Date when monthly requests are restored', null=True, verbose_name='date update')),
                ('customer_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='customer id')),
                ('subscription_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='subscription id')),
                ('payment_failed', models.BooleanField(default=False, verbose_name='payment failed')),
            ],
            options={
                'ordering': ('slug',),
            },
            bases=(squarelet.core.mixins.AvatarMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True, verbose_name='slug')),
                ('minimum_users', models.PositiveSmallIntegerField(default=1, verbose_name='minimum users')),
                ('base_price', models.PositiveSmallIntegerField(default=0, verbose_name='base price')),
                ('price_per_user', models.PositiveSmallIntegerField(default=0, verbose_name='price per user')),
                ('feature_level', models.PositiveSmallIntegerField(default=0, verbose_name='feature level')),
                ('public', models.BooleanField(default=False, verbose_name='public')),
                ('annual', models.BooleanField(default=False, help_text='Invoice this plan annually instead of charging monthly', verbose_name='annual')),
                ('for_individuals', models.BooleanField(default=True, help_text='Is this plan usable for individual organizations?', verbose_name='for individuals')),
                ('for_groups', models.BooleanField(default=True, help_text='Is this plan usable for non-individual organizations?', verbose_name='for groups')),
                ('private_organizations', models.ManyToManyField(help_text='For private plans, organizations which should have access to this plan', related_name='private_plans', to='organizations.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='ReceiptEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', django.contrib.postgres.fields.citext.CIEmailField(max_length=254, verbose_name='email')),
                ('failed', models.BooleanField(default=False, verbose_name='failed')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipt_emails', to='organizations.Organization')),
            ],
        ),
        migrations.AddField(
            model_name='organization',
            name='next_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pending_organizations', to='organizations.Plan'),
        ),
        migrations.AddField(
            model_name='organization',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='organizations', to='organizations.Plan'),
        ),
    ]
